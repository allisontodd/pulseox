%
% Script name: pulseOxProbability.m
% Copyright 2021 Neal Patwari
%   
% ESE 359: Lab 1, Allison Todd
%
% Version History:
%   Version 1.0:  Initial Release.  26 Oct 2021.
%
% License: see LICENSE.md

% Our two hypotheses:
% H0: the "normal"
%     Arterial Oxygen Saturation is >= threshold
% H1: the "abnormal", what we want to be alarmed about
%     Arterial Oxygen Saturation is < threshold

% Load data: There are two files separated by race.
% I use _w and _b for the white and Black patient data, respectively
data_w = csvread('oxygenation_w.csv',1,0);
data_b = csvread('oxygenation_b.csv',1,0);
data_all = cat(1,data_w, data_b);
% column 1 = pulse ox measurement
% column 2 = arterial ox measurement 

%% Section 1

% given threshold:
thPO = 91.5;

thAO = 88;

% Black Patients:

% P[false alarm] = # of false alarms / # of cases not hypoxemia

cFalseAlarms = 0; % false alarms counter
cNotHypo = 0; % not hypoxemia counter

for i = 1:1:length(data_b)
    if data_b(i,2) > thAO     % AO > threshold --> NOT HYPOXEMIA
        cNotHypo = cNotHypo + 1;
        if data_b(i,1) < thPO % PO < threshold --> DECIDE HYPOXEMIA
            cFalseAlarms = cFalseAlarms + 1;
        end 
    end 
end 

data(2)(1) = cFalseAlarms / cNotHypo

cCorrectDecide = 0; % correct decision counter
cHypoxemia = 0; % hypoxemia counter

for i = 1:1:length(data_b)
    if data_b(i,2) < thAO     % AO < threshold --> HYPOXEMIA
        cHypoxemia = cHypoxemia + 1;
        if data_b(i,1) < thPO % PO < threshold --> DECIDE HYPOXEMIA
            cCorrectDecide = cCorrectDecide + 1;
        end 
    end 
end 

data(2)(2) = cCorrectDecide / cHypoxemia


% White Patients:

cFalseAlarms = 0; % false alarms counter
cNotHypo = 0; % not hypoxemia counter

for i = 1:1:length(data_w)
    if data_w(i,2) > thAO    % AO > threshold --> NOT HYPOXEMIA
        cNotHypo = cNotHypo + 1;
        if data_w(i,1) < thPO % PO < threshold --> DECIDE HYPOXEMIA
            cFalseAlarms = cFalseAlarms + 1;
        end 
    end 
end 

data(1)(1) = cFalseAlarms / cNotHypo

cCorrectDecide = 0; % correct decision counter
cHypoxemia = 0; % hypoxemia counter

for i = 1:1:length(data_w)
    if data_w(i,2) < thAO    % AO < threshold --> HYPOXEMIA
        cHypoxemia = cHypoxemia + 1;
        if data_w(i,1) < thPO % PO < threshold --> DECIDE HYPOXEMIA
            cCorrectDecide = cCorrectDecide + 1;
        end 
    end 
end 

data(1)(2) = cCorrectDecide / cHypoxemia


% All Patients: 

cFalseAlarms = 0; % false alarms counter
cNotHypo = 0; % not hypoxemia counter

for i = 1:1:length(data_all)
    if data_all(i,2) > thAO     % AO > threshold --> NOT HYPOXEMIA
        cNotHypo = cNotHypo + 1;
        if data_all(i,1) < thPO % PO < threshold --> DECIDE HYPOXEMIA
            cFalseAlarms = cFalseAlarms + 1;
        end 
    end 
end 

data(3)(1) = cFalseAlarms / cNotHypo

cCorrectDecide = 0; % correct decision counter
cHypoxemia = 0; % hypoxemia counter

for i = 1:1:length(data_all)
    if data_all(i,2) < thAO     % AO < threshold --> HYPOXEMIA
        cHypoxemia = cHypoxemia + 1;
        if data_all(i,1) < thPO % PO < threshold --> DECIDE HYPOXEMIA
            cCorrectDecide = cCorrectDecide + 1;
        end 
    end 
end 

data(3,2) = cCorrectDecide / cHypoxemia


%% Section 2

thAO = 88;

for j = 88.5 : 1 : 96.5
    thPO = j;

    % Black Patients:

    % P[false alarm] = # of false alarms / # of cases not hypoxemia

    cFalseAlarms = 0; % false alarms counter
    cNotHypo = 0; % not hypoxemia counter

    for i = 1:1:length(data_b)
        if data_b(i,2) > thAO     % AO > threshold --> NOT HYPOXEMIA
            cNotHypo = cNotHypo + 1;
            if data_b(i,1) < thPO % PO < threshold --> DECIDE HYPOXEMIA
                cFalseAlarms = cFalseAlarms + 1;
            end 
        end 
    end 

    P_b_falseAlarms = cFalseAlarms / cNotHypo

    cCorrectDecide = 0; % correct decision counter
    cHypoxemia = 0; % hypoxemia counter

    for i = 1:1:length(data_b)
        if data_b(i,2) < thAO     % AO < threshold --> HYPOXEMIA
            cHypoxemia = cHypoxemia + 1;
            if data_b(i,1) < thPO % PO < threshold --> DECIDE HYPOXEMIA
                cCorrectDecide = cCorrectDecide + 1;
            end 
        end 
    end 

    P_b_correctDetection = cCorrectDecide / cHypoxemia


    % White Patients:

    cFalseAlarms = 0; % false alarms counter
    cNotHypo = 0; % not hypoxemia counter

    for i = 1:1:length(data_w)
        if data_w(i,2) > thAO    % AO > threshold --> NOT HYPOXEMIA
            cNotHypo = cNotHypo + 1;
            if data_w(i,1) < thPO % PO < threshold --> DECIDE HYPOXEMIA
                cFalseAlarms = cFalseAlarms + 1;
            end 
        end 
    end 

    P_w_falseAlarms = cFalseAlarms / cNotHypo

    cCorrectDecide = 0; % correct decision counter
    cHypoxemia = 0; % hypoxemia counter

    for i = 1:1:length(data_w)
        if data_w(i,2) < thAO    % AO < threshold --> HYPOXEMIA
            cHypoxemia = cHypoxemia + 1;
            if data_w(i,1) < thPO % PO < threshold --> DECIDE HYPOXEMIA
                cCorrectDecide = cCorrectDecide + 1;
            end 
        end 
    end 

    P_w_correctDetection = cCorrectDecide / cHypoxemia


    % All Patients: 

    cFalseAlarms = 0; % false alarms counter
    cNotHypo = 0; % not hypoxemia counter

    for i = 1:1:length(data_all)
        if data_all(i,2) > thAO     % AO > threshold --> NOT HYPOXEMIA
            cNotHypo = cNotHypo + 1;
            if data_all(i,1) < thPO % PO < threshold --> DECIDE HYPOXEMIA
                cFalseAlarms = cFalseAlarms + 1;
            end 
        end 
    end 

    P_all_falseAlarms = cFalseAlarms / cNotHypo

    cCorrectDecide = 0; % correct decision counter
    cHypoxemia = 0; % hypoxemia counter

    for i = 1:1:length(data_all)
        if data_all(i,2) < thAO     % AO < threshold --> HYPOXEMIA
            cHypoxemia = cHypoxemia + 1;
            if data_all(i,1) < thPO % PO < threshold --> DECIDE HYPOXEMIA
                cCorrectDecide = cCorrectDecide + 1;
            end 
        end 
    end 

    P_all_correctDetection = cCorrectDecide / cHypoxemia


end 

